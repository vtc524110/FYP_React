{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\FYP_React\\\\src\\\\components\\\\Biddings.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport Spinner from 'react-bootstrap/Spinner';\nimport S3 from 'react-aws-s3';\nimport oauth from 'axios-oauth-client';\nimport { Button, Container, Row, Col, Card, CardBody, CardImg, CardTitle, CardText } from \"reactstrap\"; //import { collapseTextChangeRangesAcrossMultipleVersions } from 'typescript';\n\nclass Biddings extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.uploadImageS3 = e => {\n      const config = {\n        bucketName: 'caroubuy001',\n        dirName: 'fyp_001',\n\n        /* optional */\n        region: 'eu-west-1',\n        accessKeyId: 'AKIA5LDGYZWVLZLGCKKZ',\n        secretAccessKey: '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',\n        s3Url: 'http://caroubuy001.s3-website.us-east-2.amazonaws.com'\n        /* optional */\n\n      };\n      const ReactS3Client = new S3(config);\n      /*  Notice that if you don't provide a dirName, the file will be automatically uploaded to the root of your bucket */\n\n      /* This is optional */\n\n      const newFileName = 'test-file';\n      console.log(e.target);\n      ReactS3Client.uploadFile(e.target.files[0], newFileName).then(data => console.log(data)).catch(err => console.error(err));\n      /**\r\n       * {\r\n       *   Response: {\r\n       *     bucket: \"myBucket\",\r\n       *     key: \"image/test-image.jpg\",\r\n       *     location: \"https://myBucket.s3.amazonaws.com/media/test-file.jpg\"\r\n       *   }\r\n       * }\r\n       */\n    };\n\n    this.fetchToken = async () => {\n      const res = await axios.post('http://desmond.business:8080/fyp/authenticate', {\n        \"username\": \"des123\",\n        \"password\": \"password\"\n      });\n      return res;\n    };\n\n    this.fetchBiddings = async () => {\n      const res = await this.fetchToken();\n      const token = res.data.token;\n      console.log(token);\n      let config = {\n        headers: {\n          \"Authorization\": `token ${token}`,\n          \"Cache-Control\": \"no-cache\",\n          \"Accept\": \"*/*\",\n          \"Accept-Encoding\": \"gzip,deflate,br\"\n        }\n      };\n      console.log(config);\n      var response = await axios.post(\"http://desmond.business:8080/fyp/getBiddings\", config);\n      console.log(response);\n      /*\r\n      axios.get(\"http://desmond.business:8080/fyp/getBiddings\")\r\n      .then(res => {\r\n          // Transform the raw data by extracting the nested posts\r\n          const updateCatalogue = this.state.catalogue\r\n          const posts = res.data.results;\r\n          for (var i = 0; i < this.state.itemShow; i++) {\r\n              console.log(this.state.itemSHow)\r\n              console.log(\"i=\" + i)\r\n              const min = 0;\r\n              const max = posts.length;\r\n              const rand = parseInt(min + Math.random() * (max - min))\r\n                console.log(\"rand\" + rand)\r\n              updateCatalogue.push(\r\n                  <Col key={posts[rand].id} className=\"col-md-4\">\r\n                      <Card style={{ width: '20rem' }}>\r\n                          <CardImg top src={require(\"assets/img/mac_apple.jpg\")} alt=\"...\" />\r\n                          <CardBody>\r\n                              <CardTitle>{posts[rand].title}</CardTitle>\r\n                              <CardText>{posts[rand].create_timestamp}</CardText>\r\n                              <Link to={`/CarsforSale/${posts[rand].id}`}>\r\n                                  <Button color=\"primary\">\r\n                                      ${posts[rand].selling_price}\r\n                                  </Button>\r\n                              </Link>\r\n                          </CardBody>\r\n                      </Card>\r\n                  </Col>\r\n              )\r\n          }\r\n          console.log(this.state.catalogue);\r\n          //console.log(posts);\r\n          // Update state to trigger a re-render.\r\n          // Clear any errors, and turn off the loading indiciator.\r\n          this.setState({\r\n              posts,\r\n              catalogue: updateCatalogue,\r\n              loading: false,\r\n              error: null\r\n          });\r\n      })\r\n      .catch(err => {\r\n          // Something went wrong. Save the error in state and re-render.\r\n          this.setState({\r\n              loading: false,\r\n              error: err\r\n          });\r\n      });\r\n      */\n    };\n\n    this.showMore = () => {\n      this.fetchBiddings();\n      console.log(this.state.catalogue);\n      console.log(this.state.currentIndex);\n    };\n\n    this.state = {\n      posts: [],\n      catalogue: [],\n      currentIndex: 0,\n      itemShow: 3,\n      random: 0,\n      loading: true,\n      error: null,\n      token: \"\",\n      file: \"\"\n    };\n  }\n\n  upload(e) {\n    console.log(e.target.files[0]);\n  }\n\n  componentDidMount() {\n    // Remove the 'www.' to cause a CORS error (and see the error state)\n    this.fetchBiddings();\n  }\n\n  renderLoading() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 16\n      }\n    }, \"Loading...\");\n  }\n\n  renderError() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }, \"Uh oh: \", this.state.error.message);\n  }\n\n  renderPosts() {\n    if (this.state.error) {\n      return this.renderError();\n    }\n\n    console.log(this.state.posts[0]);\n    return /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }, \"Success getting Bidding Records\");\n  }\n\n  render() {\n    const catalogue = this.state.catalogue;\n\n    if (this.state.loading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"section\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"bd-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 41\n        }\n      }, this.props.title), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.uploadImageS3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 41\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Spinner, {\n        animation: \"border\",\n        variant: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 33\n        }\n      })))));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"section\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"bd-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 41\n        }\n      }, this.props.title)))), /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 33\n        }\n      }, catalogue)))));\n    }\n  }\n\n}\n\nexport default Biddings;","map":{"version":3,"sources":["D:/React/FYP_React/src/components/Biddings.js"],"names":["React","axios","Link","Spinner","S3","oauth","Button","Container","Row","Col","Card","CardBody","CardImg","CardTitle","CardText","Biddings","Component","constructor","props","uploadImageS3","e","config","bucketName","dirName","region","accessKeyId","secretAccessKey","s3Url","ReactS3Client","newFileName","console","log","target","uploadFile","files","then","data","catch","err","error","fetchToken","res","post","fetchBiddings","token","headers","response","showMore","state","catalogue","currentIndex","posts","itemShow","random","loading","file","upload","componentDidMount","renderLoading","renderError","message","renderPosts","render","title"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport S3 from 'react-aws-s3';\r\nimport oauth from 'axios-oauth-client';\r\n\r\nimport {\r\n    Button,\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Card,\r\n    CardBody,\r\n    CardImg,\r\n    CardTitle,\r\n    CardText\r\n} from \"reactstrap\";\r\n//import { collapseTextChangeRangesAcrossMultipleVersions } from 'typescript';\r\n\r\nclass Biddings extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            posts: [],\r\n            catalogue: [],\r\n            currentIndex: 0,\r\n            itemShow: 3,\r\n            random: 0,\r\n            loading: true,\r\n            error: null,\r\n            token: \"\",\r\n            file:\"\"\r\n        };\r\n    }\r\n\r\n    upload(e) {\r\n        console.log(e.target.files[0]);\r\n    }\r\n\r\n    uploadImageS3 = (e) => {\r\n        const config = {\r\n            bucketName: 'caroubuy001',\r\n            dirName: 'fyp_001', /* optional */\r\n            region: 'eu-west-1',\r\n            accessKeyId: 'AKIA5LDGYZWVLZLGCKKZ',\r\n            secretAccessKey: '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',\r\n            s3Url: 'http://caroubuy001.s3-website.us-east-2.amazonaws.com', /* optional */\r\n        }\r\n\r\n        const ReactS3Client = new S3(config);\r\n        /*  Notice that if you don't provide a dirName, the file will be automatically uploaded to the root of your bucket */\r\n\r\n        /* This is optional */\r\n        const newFileName = 'test-file';\r\n        console.log(e.target);\r\n        ReactS3Client\r\n            .uploadFile(e.target.files[0],newFileName)\r\n            .then(data => console.log(data))\r\n            .catch(err => console.error(err))\r\n\r\n        /**\r\n         * {\r\n         *   Response: {\r\n         *     bucket: \"myBucket\",\r\n         *     key: \"image/test-image.jpg\",\r\n         *     location: \"https://myBucket.s3.amazonaws.com/media/test-file.jpg\"\r\n         *   }\r\n         * }\r\n         */\r\n    }\r\n\r\n    fetchToken = async () => {\r\n        const res = await axios.post('http://desmond.business:8080/fyp/authenticate', {\r\n            \"username\": \"des123\",\r\n            \"password\": \"password\"\r\n        })\r\n        return res;\r\n    }\r\n    fetchBiddings = async () => {\r\n        const res = await this.fetchToken();\r\n        const token = res.data.token;\r\n        console.log(token);\r\n\r\n        let config = {\r\n            headers: {\r\n                \"Authorization\": `token ${token}`,\r\n                \"Cache-Control\": \"no-cache\",\r\n                \"Accept\": \"*/*\",\r\n                \"Accept-Encoding\":\"gzip,deflate,br\"\r\n            }\r\n        }\r\n\r\n        console.log(config);\r\n        var response = await axios.post(\"http://desmond.business:8080/fyp/getBiddings\", config)\r\n        console.log(response);\r\n        /*\r\n    axios.get(\"http://desmond.business:8080/fyp/getBiddings\")\r\n        .then(res => {\r\n            // Transform the raw data by extracting the nested posts\r\n            const updateCatalogue = this.state.catalogue\r\n            const posts = res.data.results;\r\n            for (var i = 0; i < this.state.itemShow; i++) {\r\n                console.log(this.state.itemSHow)\r\n                console.log(\"i=\" + i)\r\n                const min = 0;\r\n                const max = posts.length;\r\n                const rand = parseInt(min + Math.random() * (max - min))\r\n\r\n                console.log(\"rand\" + rand)\r\n                updateCatalogue.push(\r\n                    <Col key={posts[rand].id} className=\"col-md-4\">\r\n                        <Card style={{ width: '20rem' }}>\r\n                            <CardImg top src={require(\"assets/img/mac_apple.jpg\")} alt=\"...\" />\r\n                            <CardBody>\r\n                                <CardTitle>{posts[rand].title}</CardTitle>\r\n                                <CardText>{posts[rand].create_timestamp}</CardText>\r\n                                <Link to={`/CarsforSale/${posts[rand].id}`}>\r\n                                    <Button color=\"primary\">\r\n                                        ${posts[rand].selling_price}\r\n                                    </Button>\r\n                                </Link>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                )\r\n            }\r\n            console.log(this.state.catalogue);\r\n            //console.log(posts);\r\n            // Update state to trigger a re-render.\r\n            // Clear any errors, and turn off the loading indiciator.\r\n            this.setState({\r\n                posts,\r\n                catalogue: updateCatalogue,\r\n                loading: false,\r\n                error: null\r\n            });\r\n        })\r\n        .catch(err => {\r\n            // Something went wrong. Save the error in state and re-render.\r\n            this.setState({\r\n                loading: false,\r\n                error: err\r\n            });\r\n        });\r\n    */\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Remove the 'www.' to cause a CORS error (and see the error state)\r\n        this.fetchBiddings()\r\n    }\r\n\r\n    showMore = () => {\r\n        this.fetchBiddings()\r\n        console.log(this.state.catalogue);\r\n        console.log(this.state.currentIndex);\r\n    }\r\n\r\n\r\n    renderLoading() {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    renderError() {\r\n        return (\r\n            <div>\r\n                Uh oh: {this.state.error.message}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderPosts() {\r\n        if (this.state.error) {\r\n            return this.renderError();\r\n        }\r\n\r\n        console.log(this.state.posts[0]);\r\n        return (\r\n            <h6>\r\n                Success getting Bidding Records\r\n            </h6>\r\n\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const catalogue = this.state.catalogue\r\n        if (this.state.loading) {\r\n            return (\r\n                <div className=\"section\">\r\n                    <Container className=\"text-center\">\r\n                        <Card className=\"text-center\">\r\n                            <Row>\r\n                                <Col>\r\n                                    <div className=\"title\">\r\n                                        <h1 className=\"bd-title\">{this.props.title}</h1>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            onChange={this.uploadImageS3}\r\n                                        />\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                            <div>\r\n                                <Spinner animation=\"border\" variant=\"primary\" />\r\n                            </div>\r\n\r\n                        </Card>\r\n                    </Container>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"section\">\r\n                    <Container className=\"text-center\">\r\n                        <Card className=\"text-center\">\r\n                            <Row>\r\n                                <Col>\r\n                                    <div className=\"title\">\r\n                                        <h1 className=\"bd-title\">{this.props.title}</h1>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                            <CardBody>\r\n                                <Row>\r\n                                    {catalogue}\r\n                                </Row>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Container>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Biddings;"]},"metadata":{},"sourceType":"module"}