{"ast":null,"code":"var _jsxFileName = \"/Users/project2020/Documents/GitHub/FYP_React/src/components/Category/CarsProperty.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport CategoryTable from './CategoryTable.js';\nimport Spinner from 'react-bootstrap/Spinner';\n\nclass CarsProperty extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.isLoading = () => {\n      return this.state.loading;\n    };\n\n    this.dataisNull = () => {\n      return this.state.data == null;\n    };\n\n    this.state = {\n      loading: true,\n      error: null,\n      data: [],\n      category: \"Cars & Property\",\n      fetch: \"http://desmond.business:8080/fyp/getCategoryFirstLvs\"\n    };\n  }\n\n  async componentDidMount() {\n    console.log(this.state.loading);\n    this.setState({\n      data: null,\n      loading: true,\n      error: null\n    });\n    await axios.get(this.state.fetch).then(res => {\n      // Transform the raw data by extracting the nested posts\n      const posts = res.data.results; //console.log(posts);\n      // Update state to trigger a re-render.\n      // Clear any errors, and turn off the loading indiciator.\n\n      const list = \"\";\n      list = posts.forEach(elm => {\n        elm.category_first_lv_name == this.state.category ? this.setState({\n          data: elm.theCategorySecondLvs\n        }) : console.log(elm);\n      });\n    }).catch(err => {\n      // Something went wrong. Save the error in state and re-render.\n      this.setState({\n        loading: false,\n        error: err\n      });\n    });\n    console.log(this.state.data);\n  }\n\n  render() {\n    const {\n      data,\n      loading\n    } = this.state;\n    const sample = [{\n      'fruit': 'Apple',\n      'cost': 100\n    }, {\n      'fruit': 'Orange',\n      'cost': 50\n    }, {\n      'fruit': 'Banana',\n      'cost': 35\n    }, {\n      'fruit': 'Mango',\n      'cost': 70\n    }, {\n      'fruit': 'Pineapple',\n      'cost': 45\n    }, {\n      'fruit': 'Papaya',\n      'cost': 40\n    }, {\n      'fruit': 'Watermelon',\n      'cost': 35\n    }];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, !loading ? /*#__PURE__*/React.createElement(Spinner, {\n      animation: \"border\",\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }) : /*#__PURE__*/React.createElement(CategoryTable, {\n      data: sample,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }));\n  }\n\n}\n\nexport default CarsProperty;","map":{"version":3,"sources":["/Users/project2020/Documents/GitHub/FYP_React/src/components/Category/CarsProperty.js"],"names":["React","axios","CategoryTable","Spinner","CarsProperty","Component","constructor","props","isLoading","state","loading","dataisNull","data","error","category","fetch","componentDidMount","console","log","setState","get","then","res","posts","results","list","forEach","elm","category_first_lv_name","theCategorySecondLvs","catch","err","render","sample"],"mappings":"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","sourcesContent":["import React from 'react'\nimport axios from 'axios';\nimport CategoryTable from './CategoryTable.js'\nimport Spinner from 'react-bootstrap/Spinner'\n\nclass CarsProperty extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: true,\n            error: null,\n            data: [],\n            category: \"Cars & Property\",\n            fetch: \"http://desmond.business:8080/fyp/getCategoryFirstLvs\"\n        }\n    }\n    \n    async componentDidMount() {\n        console.log(this.state.loading)\n        this.setState({\n            data: null,\n            loading: true,\n            error: null\n        })\n        \n        await axios.get(this.state.fetch)\n            .then(res => {\n                // Transform the raw data by extracting the nested posts\n\n                const posts = res.data.results;\n                //console.log(posts);\n                // Update state to trigger a re-render.\n                // Clear any errors, and turn off the loading indiciator.\n                const list = \"\"\n                list = posts.forEach((elm) => {\n                    elm.category_first_lv_name == this.state.category ? (\n                        this.setState({\n                            data: elm.theCategorySecondLvs\n                        })\n                        ):(\n                            console.log(elm)\n                        )\n                })\n            })\n            .catch(err => {\n                // Something went wrong. Save the error in state and re-render.\n                this.setState({\n                    loading: false,\n                    error: err\n                });\n            })\n            console.log(this.state.data)\n    }\n\n    isLoading = () =>{\n        return this.state.loading\n    }\n\n    dataisNull = () => {\n        return this.state.data == null\n    }\n\n    render() {\n        const { data, loading } = this.state;\n        const sample = [\n            {'fruit': 'Apple', 'cost': 100},\n            {'fruit': 'Orange', 'cost': 50},\n            {'fruit': 'Banana', 'cost': 35},\n            {'fruit': 'Mango', 'cost': 70},\n            {'fruit': 'Pineapple', 'cost': 45},\n            {'fruit': 'Papaya', 'cost': 40},\n            {'fruit': 'Watermelon', 'cost': 35}\n            ]\n           \n        return (\n            <div>\n         \n                {!loading ? (\n                    <Spinner animation=\"border\" variant=\"primary\" />\n                ) : (\n                        <CategoryTable data={sample} />\n                    )}\n            </div>\n        )\n    }\n}\n\nexport default CarsProperty;"]},"metadata":{},"sourceType":"module"}