{"ast":null,"code":"var _jsxFileName = \"/Users/project2020/Documents/GitHub/FYP_React/src/components/Category/CarsProperty.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport CategoryTable from './CategoryTable.js';\n\nclass CarsProperty extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      error: null,\n      data: null,\n      carsPropertyHeader: [],\n      carsPropertyItem: [],\n      category: \"Cars & Property\",\n      fetch: \"http://desmond.business:8080/fyp/getCategoryFirstLvs\"\n    };\n  }\n\n  componentDidMount() {\n    axios.get(this.state.fetch).then(res => {\n      // Transform the raw data by extracting the nested posts\n      const posts = res.data.results;\n      const list = null; //console.log(posts);\n      // Update state to trigger a re-render.\n      // Clear any errors, and turn off the loading indiciator.\n\n      posts.forEach(elm => {\n        if (elm.category_first_lv_name == this.state.category) {\n          console.log(elm);\n          this.state.carsPropertyHeader.push(elm.theCategorySecondLvs.map((obj, index) => /*#__PURE__*/React.createElement(\"th\", {\n            key: obj.id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 21\n            }\n          }, obj.category_second_lv_name)));\n        }\n      });\n      this.setState({\n        loading: false,\n        error: null\n      });\n    }).catch(err => {\n      // Something went wrong. Save the error in state and re-render.\n      this.setState({\n        loading: false,\n        error: err\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(CategoryTable, {\n      data: this.state.data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport default CarsProperty;","map":{"version":3,"sources":["/Users/project2020/Documents/GitHub/FYP_React/src/components/Category/CarsProperty.js"],"names":["React","axios","CategoryTable","CarsProperty","Component","constructor","props","state","loading","error","data","carsPropertyHeader","carsPropertyItem","category","fetch","componentDidMount","get","then","res","posts","results","list","forEach","elm","category_first_lv_name","console","log","push","theCategorySecondLvs","map","obj","index","id","category_second_lv_name","setState","catch","err","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;;AAEA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,KADA;AAETC,MAAAA,KAAK,EAAE,IAFE;AAGTC,MAAAA,IAAI,EAAG,IAHE;AAITC,MAAAA,kBAAkB,EAAC,EAJV;AAKTC,MAAAA,gBAAgB,EAAE,EALT;AAMTC,MAAAA,QAAQ,EAAE,iBAND;AAOTC,MAAAA,KAAK,EAAG;AAPC,KAAb;AASH;;AAEDC,EAAAA,iBAAiB,GAAE;AACfd,IAAAA,KAAK,CAACe,GAAN,CAAU,KAAKT,KAAL,CAAWO,KAArB,EACCG,IADD,CACMC,GAAG,IAAI;AACT;AAEA,YAAMC,KAAK,GAAGD,GAAG,CAACR,IAAJ,CAASU,OAAvB;AACA,YAAMC,IAAI,GAAG,IAAb,CAJS,CAKT;AACA;AACA;;AACAF,MAAAA,KAAK,CAACG,OAAN,CAAeC,GAAD,IAAS;AACnB,YAAGA,GAAG,CAACC,sBAAJ,IAA8B,KAAKjB,KAAL,CAAWM,QAA5C,EAAqD;AACjDY,UAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACJ,eAAKhB,KAAL,CAAWI,kBAAX,CAA8BgB,IAA9B,CAAmCJ,GAAG,CAACK,oBAAJ,CAAyBC,GAAzB,CAA6B,CAACC,GAAD,EAAMC,KAAN,kBAC5D;AAAI,YAAA,GAAG,EAAED,GAAG,CAACE,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACIF,GAAG,CAACG,uBADR,CAD+B,CAAnC;AAKC;AACJ,OATD;AAUA,WAAKC,QAAL,CAAc;AACV1B,QAAAA,OAAO,EAAE,KADC;AAEVC,QAAAA,KAAK,EAAE;AAFG,OAAd;AAIH,KAvBD,EAwBC0B,KAxBD,CAwBOC,GAAG,IAAI;AACV;AACA,WAAKF,QAAL,CAAc;AACV1B,QAAAA,OAAO,EAAE,KADC;AAEVC,QAAAA,KAAK,EAAE2B;AAFG,OAAd;AAIH,KA9BD;AA+BH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,aAAD;AAAe,MAAA,IAAI,EAAE,KAAK9B,KAAL,CAAWG,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AApDsC;;AAuD3C,eAAeP,YAAf","sourcesContent":["import React from 'react'\nimport axios from 'axios';\nimport CategoryTable from './CategoryTable.js'\n\nclass CarsProperty extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: false,\n            error: null,\n            data : null,\n            carsPropertyHeader:[],\n            carsPropertyItem: [],\n            category: \"Cars & Property\",\n            fetch : \"http://desmond.business:8080/fyp/getCategoryFirstLvs\"\n        }\n    }\n\n    componentDidMount(){\n        axios.get(this.state.fetch)\n        .then(res => {\n            // Transform the raw data by extracting the nested posts\n\n            const posts = res.data.results;\n            const list = null;\n            //console.log(posts);\n            // Update state to trigger a re-render.\n            // Clear any errors, and turn off the loading indiciator.\n            posts.forEach((elm) => {\n                if(elm.category_first_lv_name == this.state.category){\n                    console.log(elm)\n                this.state.carsPropertyHeader.push(elm.theCategorySecondLvs.map((obj, index) =>\n                    <th key={obj.id}>\n                       {obj.category_second_lv_name}\n                    </th>\n                    ))\n                }\n            })\n            this.setState({\n                loading: false,\n                error: null\n            });\n        })\n        .catch(err => {\n            // Something went wrong. Save the error in state and re-render.\n            this.setState({\n                loading: false,\n                error: err\n            });\n        })\n    }\n\n    render() {\n        return (\n            <CategoryTable data={this.state.data}></CategoryTable>\n        )\n    }\n}\n\nexport default CarsProperty;"]},"metadata":{},"sourceType":"module"}