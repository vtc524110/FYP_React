{"ast":null,"code":"var _jsxFileName = \"/Users/project2020/Documents/GitHub/FYP_React/src/components/Category/CarsProperty.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport CategoryTable from './CategoryTable.js';\n\nclass CarsProperty extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderCarsPropertyHeader = () => {\n      return axios.get(\"http://desmond.business:8080/fyp/getCategoryFirstLvs\").then(res => {\n        // Transform the raw data by extracting the nested posts\n        const posts = res.data.results; //console.log(posts);\n        // Update state to trigger a re-render.\n        // Clear any errors, and turn off the loading indiciator.\n\n        posts.forEach(elm => {\n          if (elm.category_first_lv_name == this.state.category) {\n            console.log(elm);\n            this.state.carsPropertyHeader.push(elm.theCategorySecondLvs);\n          }\n        });\n        console.log(\"===========================\");\n        console.log(this.state.carsPropertyHeader);\n        this.setState({\n          loading: false,\n          error: null\n        });\n      }).catch(err => {\n        // Something went wrong. Save the error in state and re-render.\n        this.setState({\n          loading: false,\n          error: err\n        });\n      });\n    };\n\n    this.renderCarsPropertyItem = () => {\n      return axios.get(\"http://desmond.business:8080/fyp/getCategoryFirstLvs\").then(res => {\n        // Transform the raw data by extracting the nested posts\n        const posts = res.data.results; //console.log(posts);\n        // Update state to trigger a re-render.\n        // Clear any errors, and turn off the loading indiciator.\n\n        posts.forEach(elm => {\n          if (elm.category_first_lv_name == this.state.category) {\n            elm.theCategorySecondLvs.forEach(subElm => {\n              console.log(\"Found subElm\");\n              console.log(subElm);\n              const carsPropertyItemList = [];\n              carsPropertyItemList.push(subElm.theCategoryThirdLvLv.map((obj, index) => /*#__PURE__*/React.createElement(\"td\", {\n                id: obj.id,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 25\n                }\n              }, /*#__PURE__*/React.createElement(\"a\", {\n                href: \"/CarsForSale\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 41\n                }\n              }, obj.category_third_lv_name))));\n              this.state.carsPropertyItem.push( /*#__PURE__*/React.createElement(\"tr\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 29\n                }\n              }, carsPropertyItemList));\n            });\n          }\n        });\n        console.log(this.state.carsProperty);\n        this.setState({\n          loading: false,\n          error: null\n        });\n      }).catch(err => {\n        // Something went wrong. Save the error in state and re-render.\n        this.setState({\n          loading: false,\n          error: err\n        });\n      });\n    };\n\n    this.isLoading = () => {\n      return this.state.loading;\n    };\n\n    this.state = {\n      loading: true,\n      error: null,\n      carsPropertyHeader: [],\n      carsPropertyItem: [],\n      category: \"Cars & Property\"\n    };\n  }\n\n  componentDidMount() {\n    this.renderCarsPropertyHeader();\n    this.renderCarsPropertyItem();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CategoryTable, {\n      data: this.state.carsPropertyHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default CarsProperty;","map":{"version":3,"sources":["/Users/project2020/Documents/GitHub/FYP_React/src/components/Category/CarsProperty.js"],"names":["React","axios","CategoryTable","CarsProperty","Component","constructor","props","renderCarsPropertyHeader","get","then","res","posts","data","results","forEach","elm","category_first_lv_name","state","category","console","log","carsPropertyHeader","push","theCategorySecondLvs","setState","loading","error","catch","err","renderCarsPropertyItem","subElm","carsPropertyItemList","theCategoryThirdLvLv","map","obj","index","id","category_third_lv_name","carsPropertyItem","carsProperty","isLoading","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport axios from 'axios';\nimport CategoryTable from './CategoryTable.js'\n\nclass CarsProperty extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: true,\n            error: null,\n            carsPropertyHeader:[],\n            carsPropertyItem: [],\n            category:\"Cars & Property\"\n        }\n    }\n\n    componentDidMount(){\n        this.renderCarsPropertyHeader()\n        this.renderCarsPropertyItem()\n    }\n\n    renderCarsPropertyHeader = () => {\n        \n        return(\n        axios.get(\"http://desmond.business:8080/fyp/getCategoryFirstLvs\")\n            .then(res => {\n                // Transform the raw data by extracting the nested posts\n\n                const posts = res.data.results;\n                //console.log(posts);\n                // Update state to trigger a re-render.\n                // Clear any errors, and turn off the loading indiciator.\n                posts.forEach((elm) => {\n                    if(elm.category_first_lv_name == this.state.category){\n                        console.log(elm)\n                    this.state.carsPropertyHeader.push(elm.theCategorySecondLvs)\n                    }\n                })\n                \n                console.log(\"===========================\")\n                console.log(this.state.carsPropertyHeader)\n                this.setState({\n                    loading: false,\n                    error: null\n                });\n            })\n            .catch(err => {\n                // Something went wrong. Save the error in state and re-render.\n                this.setState({\n                    loading: false,\n                    error: err\n                });\n            })\n        )\n    }\n\n    renderCarsPropertyItem = () => {\n        \n        return(\n        axios.get(\"http://desmond.business:8080/fyp/getCategoryFirstLvs\")\n            .then(res => {\n                // Transform the raw data by extracting the nested posts\n\n                const posts = res.data.results;\n                //console.log(posts);\n                // Update state to trigger a re-render.\n                // Clear any errors, and turn off the loading indiciator.\n                posts.forEach((elm) => {\n                    if(elm.category_first_lv_name == this.state.category){\n                    elm.theCategorySecondLvs.forEach(subElm=>{\n                        console.log(\"Found subElm\")\n                        console.log(subElm)\n                        const carsPropertyItemList = []\n                        carsPropertyItemList.push(subElm.theCategoryThirdLvLv.map((obj,index)=>\n                        <td id={obj.id}><a href=\"/CarsForSale\">{obj.category_third_lv_name}</a></td>\n                        )\n                        )\n\n                        this.state.carsPropertyItem.push(\n                            <tr>\n                                {carsPropertyItemList}\n                            </tr>\n                        )\n                    })\n                    }\n                })\n\n                console.log(this.state.carsProperty)\n                this.setState({\n                    loading: false,\n                    error: null\n                });\n            })\n            .catch(err => {\n                // Something went wrong. Save the error in state and re-render.\n                this.setState({\n                    loading: false,\n                    error: err\n                });\n            })\n        )\n    }\n\n    isLoading=() => {\n        return this.state.loading;\n    }\n    render() {\n        return (\n            <div>\n                <CategoryTable data={this.state.carsPropertyHeader} />\n            </div>\n        )\n    }\n}\n\nexport default CarsProperty;"]},"metadata":{},"sourceType":"module"}