{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\FYP_React\\\\src\\\\components\\\\Biddings.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { Button, Container, Row, Col, Card, CardBody, CardImg, CardTitle, CardText } from \"reactstrap\"; //import { collapseTextChangeRangesAcrossMultipleVersions } from 'typescript';\n\nclass Biddings extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchBiddings = () => {\n      axios.post('http://desmond.business:8080/fyp/authenticate', {\n        \"username\": \"des123\",\n        \"password\": \"password\"\n      }).then(response => {\n        console.log(\"Successful posting!!!\");\n        this.setState({\n          token: response.data.token\n        });\n      }).catch(function (error) {\n        console.log(\"Error~~~ posting!!!\");\n        console.log(error);\n      });\n      console.log(this.token);\n      const AuthStr = 'Bearer '.concat(this.token);\n      axios.get(\"http://desmond.business:8080/fyp/getBiddings\", {\n        headers: {\n          Authorization: AuthStr\n        }\n      }).then(res => {\n        // Transform the raw data by extracting the nested posts\n        const updateCatalogue = this.state.catalogue;\n        const posts = res.data.results;\n\n        for (var i = 0; i < this.state.itemShow; i++) {\n          console.log(this.state.itemSHow);\n          console.log(\"i=\" + i);\n          const min = 0;\n          const max = posts.length;\n          const rand = parseInt(min + Math.random() * (max - min));\n          console.log(\"rand\" + rand);\n          updateCatalogue.push( /*#__PURE__*/React.createElement(Col, {\n            key: posts[rand].id,\n            className: \"col-md-4\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(Card, {\n            style: {\n              width: '20rem'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(CardImg, {\n            top: true,\n            src: require(\"assets/img/mac_apple.jpg\"),\n            alt: \"...\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }\n          }), /*#__PURE__*/React.createElement(CardBody, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(CardTitle, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 37\n            }\n          }, posts[rand].title), /*#__PURE__*/React.createElement(CardText, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 37\n            }\n          }, posts[rand].create_timestamp), /*#__PURE__*/React.createElement(Link, {\n            to: `/CarsforSale/${posts[rand].id}`,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 37\n            }\n          }, /*#__PURE__*/React.createElement(Button, {\n            color: \"primary\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 41\n            }\n          }, \"$\", posts[rand].selling_price))))));\n        }\n\n        console.log(this.state.catalogue); //console.log(posts);\n        // Update state to trigger a re-render.\n        // Clear any errors, and turn off the loading indiciator.\n\n        this.setState({\n          posts,\n          catalogue: updateCatalogue,\n          loading: false,\n          error: null\n        });\n      }).catch(err => {\n        // Something went wrong. Save the error in state and re-render.\n        this.setState({\n          loading: false,\n          error: err\n        });\n      });\n    };\n\n    this.showMore = () => {\n      this.fetchBiddings();\n      console.log(this.state.catalogue);\n      console.log(this.state.currentIndex);\n    };\n\n    this.state = {\n      posts: [],\n      catalogue: [],\n      currentIndex: 0,\n      itemShow: 3,\n      random: 0,\n      loading: true,\n      error: null,\n      token: \"\"\n    };\n  }\n\n  componentDidMount() {\n    // Remove the 'www.' to cause a CORS error (and see the error state)\n    this.fetchBiddings();\n  }\n\n  renderLoading() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 16\n      }\n    }, \"Loading...\");\n  }\n\n  renderError() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, \"Uh oh: \", this.state.error.message);\n  }\n\n  renderPosts() {\n    if (this.state.error) {\n      return this.renderError();\n    }\n\n    console.log(this.state.posts[0]);\n    return /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, \"Success getting Bidding Records\");\n  }\n\n  render() {\n    const catalogue = this.state.catalogue;\n\n    if (this.state.loading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"section\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"bd-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 37\n        }\n      }, this.props.title)))), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Spinner, {\n        animation: \"border\",\n        variant: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }\n      })))));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"section\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"bd-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 37\n        }\n      }, this.props.title)))), /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 29\n        }\n      }, catalogue)))));\n    }\n  }\n\n}\n\nexport default Biddings;","map":{"version":3,"sources":["D:/React/FYP_React/src/components/Biddings.js"],"names":["React","axios","Link","Spinner","Button","Container","Row","Col","Card","CardBody","CardImg","CardTitle","CardText","Biddings","Component","constructor","props","fetchBiddings","post","then","response","console","log","setState","token","data","catch","error","AuthStr","concat","get","headers","Authorization","res","updateCatalogue","state","catalogue","posts","results","i","itemShow","itemSHow","min","max","length","rand","parseInt","Math","random","push","id","width","require","title","create_timestamp","selling_price","loading","err","showMore","currentIndex","componentDidMount","renderLoading","renderError","message","renderPosts","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\nimport {\r\n    Button,\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Card,\r\n    CardBody,\r\n    CardImg,\r\n    CardTitle,\r\n    CardText\r\n} from \"reactstrap\";\r\n//import { collapseTextChangeRangesAcrossMultipleVersions } from 'typescript';\r\n\r\nclass Biddings extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            posts: [],\r\n            catalogue: [],\r\n            currentIndex: 0,\r\n            itemShow: 3,\r\n            random: 0,\r\n            loading: true,\r\n            error: null,\r\n            token: \"\"\r\n        };\r\n    }\r\n\r\n    fetchBiddings = () => {\r\n        axios.post('http://desmond.business:8080/fyp/authenticate', {\r\n            \"username\": \"des123\",\r\n            \"password\": \"password\"\r\n        })\r\n            .then(response =>{\r\n                console.log(\"Successful posting!!!\");\r\n                this.setState({\r\n                    token: response.data.token\r\n                });\r\n            })\r\n            .catch(function (error) {\r\n                console.log(\"Error~~~ posting!!!\")\r\n                console.log(error);\r\n            });\r\n        \r\n        console.log(this.token);\r\n        const AuthStr = 'Bearer '.concat(this.token);\r\n        axios.get(\"http://desmond.business:8080/fyp/getBiddings\", { headers: { Authorization: AuthStr } })\r\n            .then(res => {\r\n                // Transform the raw data by extracting the nested posts\r\n                const updateCatalogue = this.state.catalogue\r\n                const posts = res.data.results;\r\n                for (var i = 0; i < this.state.itemShow; i++) {\r\n                    console.log(this.state.itemSHow)\r\n                    console.log(\"i=\"+i)\r\n                    const min = 0;\r\n                    const max = posts.length;\r\n                    const rand = parseInt(min + Math.random() * (max - min))\r\n      \r\n                    console.log(\"rand\"+rand)\r\n                    updateCatalogue.push(\r\n                        <Col key={posts[rand].id} className=\"col-md-4\">\r\n                            <Card style={{ width: '20rem' }}>\r\n                                <CardImg top src={require(\"assets/img/mac_apple.jpg\")} alt=\"...\" />\r\n                                <CardBody>\r\n                                    <CardTitle>{posts[rand].title}</CardTitle>\r\n                                    <CardText>{posts[rand].create_timestamp}</CardText>\r\n                                    <Link to={`/CarsforSale/${posts[rand].id}`}>\r\n                                        <Button color=\"primary\">\r\n                                            ${posts[rand].selling_price}\r\n                                        </Button>\r\n                                    </Link>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    )\r\n                }\r\n                console.log(this.state.catalogue);\r\n                //console.log(posts);\r\n                // Update state to trigger a re-render.\r\n                // Clear any errors, and turn off the loading indiciator.\r\n                this.setState({\r\n                    posts,\r\n                    catalogue: updateCatalogue,\r\n                    loading: false,\r\n                    error: null\r\n                });\r\n            })\r\n            .catch(err => {\r\n                // Something went wrong. Save the error in state and re-render.\r\n                this.setState({\r\n                    loading: false,\r\n                    error: err\r\n                });\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Remove the 'www.' to cause a CORS error (and see the error state)\r\n        this.fetchBiddings()\r\n    }\r\n\r\n    showMore = () => {\r\n        this.fetchBiddings()\r\n        console.log(this.state.catalogue);\r\n        console.log(this.state.currentIndex);\r\n    }\r\n\r\n\r\n    renderLoading() {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    renderError() {\r\n        return (\r\n            <div>\r\n                Uh oh: {this.state.error.message}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderPosts() {\r\n        if (this.state.error) {\r\n            return this.renderError();\r\n        }\r\n\r\n        console.log(this.state.posts[0]);\r\n        return (\r\n            <h6>\r\n                Success getting Bidding Records\r\n            </h6>\r\n\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const catalogue = this.state.catalogue\r\n        if (this.state.loading){\r\n            return (\r\n                <div className=\"section\">\r\n                <Container className=\"text-center\">\r\n                    <Card className=\"text-center\">\r\n                        <Row>\r\n                            <Col>\r\n                                <div className=\"title\">\r\n                                    <h1 className=\"bd-title\">{this.props.title}</h1>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                        <div>\r\n                        <Spinner animation=\"border\" variant=\"primary\" />\r\n                        </div>\r\n                     \r\n                    </Card>\r\n                </Container>\r\n            </div>\r\n            )\r\n        } else {\r\n        return (\r\n            <div className=\"section\">\r\n                <Container className=\"text-center\">\r\n                    <Card className=\"text-center\">\r\n                        <Row>\r\n                            <Col>\r\n                                <div className=\"title\">\r\n                                    <h1 className=\"bd-title\">{this.props.title}</h1>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                        <CardBody>\r\n                            <Row>\r\n                                {catalogue}\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n}\r\n\r\nexport default Biddings;"]},"metadata":{},"sourceType":"module"}