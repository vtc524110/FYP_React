{"ast":null,"code":"var _jsxFileName = \"/Users/project2020/Documents/GitHub/FYP_React/src/components/Category/CarsProperty.js\";\nimport React from 'react';\n\nclass CarsProperty extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderCarsProperty = () => {\n      return axios.get(\"http://desmond.business:8080/fyp/getCategoryFirstLvs\").then(res => {\n        // Transform the raw data by extracting the nested posts\n        const posts = res.data.results; //console.log(posts);\n        // Update state to trigger a re-render.\n        // Clear any errors, and turn off the loading indiciator.\n\n        posts.forEach(elm => {\n          renderMainCategory.push( /*#__PURE__*/React.createElement(\"option\", {\n            value: elm.id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 25\n            }\n          }, elm.category_first_lv_name));\n        });\n        this.setState({\n          category: posts,\n          mainCategory: renderMainCategory,\n          loading: false,\n          error: null\n        });\n      }).catch(err => {\n        // Something went wrong. Save the error in state and re-render.\n        this.setState({\n          loading: false,\n          error: err\n        });\n      });\n    };\n\n    this.state = {\n      students: [{\n        car: 'Cars for Sale',\n        property: 'Industrial property'\n      }, {\n        car: 'Vehicle Rentals',\n        property: 'Rentals'\n      }]\n    };\n  }\n\n  renderTableHeader() {\n    let header = Object.keys(this.state.students[0]);\n    return header.map((key, index) => {\n      return /*#__PURE__*/React.createElement(\"th\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 20\n        }\n      }, key.toUpperCase());\n    });\n  }\n\n  renderTableData() {\n    return this.state.students.map((student, index) => {\n      const {\n        car,\n        property\n      } = student; //destructuring\n\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: car,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"/CarsForSale\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }\n      }, car)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      }, property));\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      id: \"students\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }, this.renderTableHeader()), this.renderTableData())));\n  }\n\n}\n\nexport default CarsProperty;","map":{"version":3,"sources":["/Users/project2020/Documents/GitHub/FYP_React/src/components/Category/CarsProperty.js"],"names":["React","CarsProperty","Component","constructor","props","renderCarsProperty","axios","get","then","res","posts","data","results","forEach","elm","renderMainCategory","push","id","category_first_lv_name","setState","category","mainCategory","loading","error","catch","err","state","students","car","property","renderTableHeader","header","Object","keys","map","key","index","toUpperCase","renderTableData","student","render"],"mappings":"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","sourcesContent":["import React from 'react'\n\nclass CarsProperty extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            students: [\n                { car: 'Cars for Sale', property: 'Industrial property' },\n                { car: 'Vehicle Rentals', property: 'Rentals' },\n            ]\n        }\n    }\n\n    renderCarsProperty = () => {\n        return(\n        axios.get(\"http://desmond.business:8080/fyp/getCategoryFirstLvs\")\n            .then(res => {\n                // Transform the raw data by extracting the nested posts\n\n                const posts = res.data.results;\n                //console.log(posts);\n                // Update state to trigger a re-render.\n                // Clear any errors, and turn off the loading indiciator.\n                posts.forEach((elm) => {\n\n                    renderMainCategory.push(\n                        <option\n                            value={elm.id}\n                        >{elm.category_first_lv_name}\n                        </option>\n                    );\n                })\n                this.setState({\n                    category: posts,\n                    mainCategory: renderMainCategory,\n                    loading: false,\n                    error: null\n                });\n            })\n            .catch(err => {\n                // Something went wrong. Save the error in state and re-render.\n                this.setState({\n                    loading: false,\n                    error: err\n                });\n            })\n        )\n    }\n\n    renderTableHeader() {\n        let header = Object.keys(this.state.students[0])\n        return header.map((key, index) => {\n            return <th key={index}>{key.toUpperCase()}</th>\n        })\n    }\n\n    renderTableData() {\n        return this.state.students.map((student, index) => {\n            const { car, property } = student //destructuring\n            return (\n                <tr key={car}>\n                    <td><a href=\"/CarsForSale\">{car}</a></td>\n                    <td>{property}</td>\n                </tr>\n            )\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <table id='students'>\n                    <tbody>\n                        <tr>{this.renderTableHeader()}</tr>\n                        {this.renderTableData()}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default CarsProperty;"]},"metadata":{},"sourceType":"module"}