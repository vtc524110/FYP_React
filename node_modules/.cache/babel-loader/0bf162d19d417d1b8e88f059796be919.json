{"ast":null,"code":"var _jsxFileName = \"/Users/project2020/Documents/GitHub/FYP_React/src/components/CustomModal.js\";\nimport React from \"react\"; // reactstrap components\n\nimport { Button, FormGroup, Input, Modal, UncontrolledPopover, PopoverHeader, PopoverBody, UncontrolledTooltip } from \"reactstrap\";\n\nfunction CustomModal(title) {\n  const [tooltipsAndPopovers, setTooltipsAndPopovers] = React.useState(false);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    type: \"button\",\n    onClick: () => setTooltipsAndPopovers(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, \"Launch demo modal\"), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: tooltipsAndPopovers,\n    toggle: () => setTooltipsAndPopovers(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"modal-title\",\n    id: \"exampleModalPopoversLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, title), /*#__PURE__*/React.createElement(\"button\", {\n    \"aria-label\": \"Close\",\n    className: \"close\",\n    \"data-dismiss\": \"modal\",\n    type: \"button\",\n    onClick: () => setTooltipsAndPopovers(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"\\xD7\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, \"Popover in a modal\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"This\", \" \", /*#__PURE__*/React.createElement(Button, {\n    className: \"popover-test\",\n    color: \"secondary\",\n    role: \"button\",\n    id: \"popover1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"button\"), \" \", /*#__PURE__*/React.createElement(UncontrolledPopover, {\n    target: \"#popover1\",\n    placement: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PopoverHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, \"Popover Title\"), /*#__PURE__*/React.createElement(PopoverBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, \"Popover body content is set here.\")), \"triggers a popover on click.\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"Tooltips in a modal\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: \"tooltip-test\",\n    href: \"#pablo\",\n    id: \"tooltip1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"This link\"), \" \", /*#__PURE__*/React.createElement(UncontrolledTooltip, {\n    target: \"#tooltip1\",\n    placement: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"Tooltip\"), \"and\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n    className: \"tooltip-test\",\n    href: \"#pablo\",\n    id: \"tooltip2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"that link\"), \" \", /*#__PURE__*/React.createElement(UncontrolledTooltip, {\n    target: \"#tooltip2\",\n    placement: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"Tooltip\"), \"have tooltips on hover.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left-side\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-link\",\n    color: \"default\",\n    onClick: () => setTooltipsAndPopovers(false),\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Never mind\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"right-side\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-link\",\n    color: \"danger\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"Delete\")))));\n}\n\nexport default CustomModal;","map":{"version":3,"sources":["/Users/project2020/Documents/GitHub/FYP_React/src/components/CustomModal.js"],"names":["React","Button","FormGroup","Input","Modal","UncontrolledPopover","PopoverHeader","PopoverBody","UncontrolledTooltip","CustomModal","title","tooltipsAndPopovers","setTooltipsAndPopovers","useState"],"mappings":"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","sourcesContent":["import React from \"react\";\n// reactstrap components\nimport { Button, FormGroup, Input, Modal, UncontrolledPopover, PopoverHeader, PopoverBody, UncontrolledTooltip } from \"reactstrap\";\n\nfunction CustomModal(title) {\n  const [tooltipsAndPopovers, setTooltipsAndPopovers] = React.useState(false);\n  return(\n    <>\n      <Button\n        color=\"primary\"\n        type=\"button\"\n        onClick={() => setTooltipsAndPopovers(true)}\n      >\n        Launch demo modal\n      </Button>\n      <Modal\n        isOpen={tooltipsAndPopovers}\n        toggle={() => setTooltipsAndPopovers(false)}\n      >\n        <div className=\"modal-header\">\n          <h5 className=\"modal-title\" id=\"exampleModalPopoversLabel\">\n            {title}\n          </h5>\n          <button\n            aria-label=\"Close\"\n            className=\"close\"\n            data-dismiss=\"modal\"\n            type=\"button\"\n            onClick={() => setTooltipsAndPopovers(false)}\n          >\n            <span aria-hidden={true}>×</span>\n          </button>\n        </div>\n        <div className=\"modal-body\">\n          <h5>Popover in a modal</h5>\n          <p>\n            This{\" \"}\n            <Button\n              className=\"popover-test\"\n              color=\"secondary\"\n              role=\"button\"\n              id=\"popover1\"\n            >\n              button\n            </Button>{\" \"}\n            <UncontrolledPopover target=\"#popover1\" placement=\"top\">\n              <PopoverHeader>Popover Title</PopoverHeader>\n              <PopoverBody>Popover body content is set here.</PopoverBody>\n            </UncontrolledPopover>\n            triggers a popover on click.\n          </p>\n          <hr />\n          <h5>Tooltips in a modal</h5>\n          <p>\n            <a className=\"tooltip-test\" href=\"#pablo\" id=\"tooltip1\">\n              This link\n            </a>{\" \"}\n            <UncontrolledTooltip target=\"#tooltip1\" placement=\"top\">\n              Tooltip\n            </UncontrolledTooltip>\n            and{\" \"}\n            <a className=\"tooltip-test\" href=\"#pablo\" id=\"tooltip2\">\n              that link\n            </a>{\" \"}\n            <UncontrolledTooltip target=\"#tooltip2\" placement=\"top\">\n              Tooltip\n            </UncontrolledTooltip>\n            have tooltips on hover.\n          </p>\n        </div>\n        <div className=\"modal-footer\">\n          <div className=\"left-side\">\n            <Button\n              className=\"btn-link\"\n              color=\"default\"\n              onClick={() => setTooltipsAndPopovers(false)}\n              type=\"button\"\n            >\n              Never mind\n            </Button>\n          </div>\n          <div className=\"divider\" />\n          <div className=\"right-side\">\n            <Button className=\"btn-link\" color=\"danger\" type=\"button\">\n              Delete\n            </Button>\n          </div>\n        </div>\n      </Modal>\n    </>\n  );\n}\n\nexport default CustomModal;"]},"metadata":{},"sourceType":"module"}