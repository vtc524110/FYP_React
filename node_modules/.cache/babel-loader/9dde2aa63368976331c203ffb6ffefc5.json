{"ast":null,"code":"var _jsxFileName = \"/Users/project2020/Documents/GitHub/FYP_React/src/components/Category/CarsProperty.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport CategoryTable from './CategoryTable.js';\nimport Spinner from 'react-bootstrap/Spinner';\n\nclass CarsProperty extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.isLoading = () => {\n      return this.state.loading;\n    };\n\n    this.state = {\n      loading: true,\n      error: null,\n      data: [],\n      category: \"Cars & Property\",\n      fetch: \"http://desmond.business:8080/fyp/getCategoryFirstLvs\"\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      data: null,\n      loading: true,\n      error: null\n    });\n    axios.get(this.state.fetch).then(res => {\n      // Transform the raw data by extracting the nested posts\n      const posts = res.data.results; //console.log(posts);\n      // Update state to trigger a re-render.\n      // Clear any errors, and turn off the loading indiciator.\n\n      const list = \"\";\n      list = posts.forEach(elm => {\n        elm.category_first_lv_name == this.state.category ? this.setState({\n          data: elm.theCategorySecondLvs\n        }) : console.log(elm);\n      });\n      this.setState({\n        loading: false\n      });\n    }).catch(err => {\n      // Something went wrong. Save the error in state and re-render.\n      this.setState({\n        loading: true,\n        error: err\n      });\n    });\n    console.log(this.state.data);\n  }\n\n  render() {\n    const {\n      data,\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, this.isLoading() ? /*#__PURE__*/React.createElement(Spinner, {\n      animation: \"border\",\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }) : /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }, \"Landed Data\"));\n  }\n\n}\n\nexport default CarsProperty;","map":{"version":3,"sources":["/Users/project2020/Documents/GitHub/FYP_React/src/components/Category/CarsProperty.js"],"names":["React","axios","CategoryTable","Spinner","CarsProperty","Component","constructor","props","isLoading","state","loading","error","data","category","fetch","componentDidMount","setState","get","then","res","posts","results","list","forEach","elm","category_first_lv_name","theCategorySecondLvs","console","log","catch","err","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,OAAP,MAAoB,yBAApB;;AAEA,MAAMC,YAAN,SAA2BJ,KAAK,CAACK,SAAjC,CAA2C;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAiDnBC,SAjDmB,GAiDP,MAAK;AACb,aAAO,KAAKC,KAAL,CAAWC,OAAlB;AACH,KAnDkB;;AAEf,SAAKD,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,IADA;AAETC,MAAAA,KAAK,EAAE,IAFE;AAGTC,MAAAA,IAAI,EAAE,EAHG;AAITC,MAAAA,QAAQ,EAAE,iBAJD;AAKTC,MAAAA,KAAK,EAAE;AALE,KAAb;AAOH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,QAAL,CAAc;AACVJ,MAAAA,IAAI,EAAE,IADI;AAEVF,MAAAA,OAAO,EAAE,IAFC;AAGVC,MAAAA,KAAK,EAAE;AAHG,KAAd;AAKAV,IAAAA,KAAK,CAACgB,GAAN,CAAU,KAAKR,KAAL,CAAWK,KAArB,EACKI,IADL,CACUC,GAAG,IAAI;AACT;AAEA,YAAMC,KAAK,GAAGD,GAAG,CAACP,IAAJ,CAASS,OAAvB,CAHS,CAIT;AACA;AACA;;AACA,YAAMC,IAAI,GAAG,EAAb;AACAA,MAAAA,IAAI,GAAGF,KAAK,CAACG,OAAN,CAAeC,GAAD,IAAS;AAC1BA,QAAAA,GAAG,CAACC,sBAAJ,IAA8B,KAAKhB,KAAL,CAAWI,QAAzC,GACI,KAAKG,QAAL,CAAc;AACVJ,UAAAA,IAAI,EAAEY,GAAG,CAACE;AADA,SAAd,CADJ,GAKQC,OAAO,CAACC,GAAR,CAAYJ,GAAZ,CALR;AAOH,OARM,CAAP;AASA,WAAKR,QAAL,CAAc;AACVN,QAAAA,OAAO,EAAE;AADC,OAAd;AAGH,KArBL,EAsBKmB,KAtBL,CAsBWC,GAAG,IAAI;AACV;AACA,WAAKd,QAAL,CAAc;AACVN,QAAAA,OAAO,EAAE,IADC;AAEVC,QAAAA,KAAK,EAAEmB;AAFG,OAAd;AAIH,KA5BL;AA6BIH,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKnB,KAAL,CAAWG,IAAvB;AACP;;AAKDmB,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEnB,MAAAA,IAAF;AAAQF,MAAAA;AAAR,QAAoB,KAAKD,KAA/B;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEK,KAAKD,SAAL,kBACG,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,QAAnB;AAA4B,MAAA,OAAO,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,gBAGO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALZ,CADJ;AAUH;;AAjEsC;;AAoE3C,eAAeJ,YAAf","sourcesContent":["import React from 'react'\nimport axios from 'axios';\nimport CategoryTable from './CategoryTable.js'\nimport Spinner from 'react-bootstrap/Spinner'\n\nclass CarsProperty extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: true,\n            error: null,\n            data: [],\n            category: \"Cars & Property\",\n            fetch: \"http://desmond.business:8080/fyp/getCategoryFirstLvs\"\n        }\n    }\n    \n    componentDidMount() {\n        this.setState({\n            data: null,\n            loading: true,\n            error: null\n        })\n        axios.get(this.state.fetch)\n            .then(res => {\n                // Transform the raw data by extracting the nested posts\n\n                const posts = res.data.results;\n                //console.log(posts);\n                // Update state to trigger a re-render.\n                // Clear any errors, and turn off the loading indiciator.\n                const list = \"\"\n                list = posts.forEach((elm) => {\n                    elm.category_first_lv_name == this.state.category ? (\n                        this.setState({\n                            data: elm.theCategorySecondLvs\n                        })\n                        ):(\n                            console.log(elm)\n                        )\n                })\n                this.setState({\n                    loading: false\n                })\n            })\n            .catch(err => {\n                // Something went wrong. Save the error in state and re-render.\n                this.setState({\n                    loading: true,\n                    error: err\n                });\n            })\n            console.log(this.state.data)\n    }\n\n    isLoading = () =>{\n        return this.state.loading\n    }\n    render() {\n        const { data, loading } = this.state;\n        return (\n            <div>\n         \n                {this.isLoading() ? (\n                    <Spinner animation=\"border\" variant=\"primary\" />\n                ) : (\n                        <h6>Landed Data</h6>\n                    )}\n            </div>\n        )\n    }\n}\n\nexport default CarsProperty;"]},"metadata":{},"sourceType":"module"}