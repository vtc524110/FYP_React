{"ast":null,"code":"var _jsxFileName = \"/Users/project2020/Documents/GitHub/FYP_React/src/components/Category/Other.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport CategoryTable from './CategoryTable.js';\nimport Spinner from 'react-bootstrap/Spinner';\nimport CarsProperty from './CarsProperty.js';\n\nclass Other extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.isLoading = () => {\n      return this.state.loading;\n    };\n\n    this.dataisNull = () => {\n      return this.state.data == null;\n    };\n\n    this.state = {\n      loading: true,\n      error: null,\n      data: [],\n      category: \"Other\",\n      category_second_lv_name: null,\n      fetch: \"http://desmond.business:8080/fyp/getCategoryFirstLvs\"\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      data: [],\n      loading: true,\n      error: null\n    });\n    axios.get(this.state.fetch).then(res => {\n      // Transform the raw data by extracting the nested posts\n      const posts = res.data.results;\n      console.log(posts); // Update state to trigger a re-render.\n      // Clear any errors, and turn off the loading indiciator.\n\n      posts.forEach(elm => {\n        console.log(\"Category\" + this.state.category);\n        console.log(elm.category_first_lv_name);\n\n        if (elm.category_first_lv_name == this.state.category) {\n          for (var i = 0; i < elm.theCategorySecondLvs.length - 1; i++) {\n            for (var k = 0; k < elm.theCategorySecondLvs[i].theCategoryThirdLvLv.length; k++) {\n              console.log(elm.theCategorySecondLvs[i].category_second_lv_name);\n              let mapping = {};\n              const index = i + 1;\n\n              if (elm.theCategorySecondLvs[i].theCategoryThirdLvLv.length <= 1) {\n                mapping[elm.theCategorySecondLvs[i].category_second_lv_name] = elm.theCategorySecondLvs[i].theCategoryThirdLvLv[k].category_third_lv_name;\n              } else {\n                for (var j = 0; j < elm.theCategorySecondLvs.length; j++) {\n                  mapping[elm.theCategorySecondLvs[j].category_second_lv_name] = elm.theCategorySecondLvs[j].theCategoryThirdLvLv[k].category_third_lv_name;\n                }\n\n                console.log(mapping);\n                this.state.data.push(mapping);\n              }\n            }\n          }\n        }\n      });\n      this.setState({\n        loading: false\n      });\n    }).catch(err => {\n      // Something went wrong. Save the error in state and re-render.\n      this.setState({\n        loading: false,\n        error: err\n      });\n    });\n  }\n\n  render() {\n    const {\n      data,\n      loading\n    } = this.state;\n\n    if (this.state.loading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Spinner, {\n        animation: \"border\",\n        variant: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 20\n        }\n      }, \"Landed data\"));\n    }\n  }\n\n}\n\nexport default Other;","map":{"version":3,"sources":["/Users/project2020/Documents/GitHub/FYP_React/src/components/Category/Other.js"],"names":["React","axios","CategoryTable","Spinner","CarsProperty","Other","Component","constructor","props","isLoading","state","loading","dataisNull","data","error","category","category_second_lv_name","fetch","componentDidMount","setState","get","then","res","posts","results","console","log","forEach","elm","category_first_lv_name","i","theCategorySecondLvs","length","k","theCategoryThirdLvLv","mapping","index","category_third_lv_name","j","push","catch","err","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport axios from 'axios';\nimport CategoryTable from './CategoryTable.js'\nimport Spinner from 'react-bootstrap/Spinner'\nimport CarsProperty from './CarsProperty.js';\n\nclass Other extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: true,\n            error: null,\n            data: [],\n            category: \"Other\",\n            category_second_lv_name: null,\n            fetch: \"http://desmond.business:8080/fyp/getCategoryFirstLvs\"\n        }\n    }\n\n    componentDidMount() {\n        this.setState({\n            data: [],\n            loading: true,\n            error: null\n        })\n\n        axios.get(this.state.fetch)\n            .then(res => {\n                // Transform the raw data by extracting the nested posts\n\n                const posts = res.data.results;\n                console.log(posts);\n                // Update state to trigger a re-render.\n                // Clear any errors, and turn off the loading indiciator.\n         \n                posts.forEach((elm) => {\n           \n                    console.log(\"Category\"+this.state.category)\n                    console.log(elm.category_first_lv_name)\n                    if (elm.category_first_lv_name == this.state.category) {\n                        for (var i = 0; i < elm.theCategorySecondLvs.length-1; i++) {\n                      \n                            for (var k = 0; k < elm.theCategorySecondLvs[i].theCategoryThirdLvLv.length; k++) {\n                                console.log(elm.theCategorySecondLvs[i].category_second_lv_name)\n                                let mapping = {}\n                                const index = i + 1\n                                if (elm.theCategorySecondLvs[i].theCategoryThirdLvLv.length<=1){\n                                    mapping[elm.theCategorySecondLvs[i].category_second_lv_name] = elm.theCategorySecondLvs[i].theCategoryThirdLvLv[k].category_third_lv_name    \n                                } else {\n\n                                for (var j =0 ; j <elm.theCategorySecondLvs.length;j++){\n                                \n                                    mapping[elm.theCategorySecondLvs[j].category_second_lv_name] = elm.theCategorySecondLvs[j].theCategoryThirdLvLv[k].category_third_lv_name\n                                }\n                                console.log(mapping)\n                                this.state.data.push(mapping)\n                            }\n                                \n                            }\n\n                        }\n                    }\n                })\n\n                this.setState({\n                    loading: false\n                })\n            })\n            .catch(err => {\n                // Something went wrong. Save the error in state and re-render.\n                this.setState({\n                    loading: false,\n                    error: err\n                });\n            })\n    }\n\n    isLoading = () => {\n        return this.state.loading\n    }\n\n    dataisNull = () => {\n        return this.state.data == null\n    }\n\n    render() {\n        const { data, loading } = this.state;\n\n        if (this.state.loading) {\n            return (\n                <div>\n                    <Spinner animation=\"border\" variant=\"primary\" />\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                   <p>Landed data</p>\n                </div>\n            )\n        }\n    }\n}\n\nexport default Other;"]},"metadata":{},"sourceType":"module"}