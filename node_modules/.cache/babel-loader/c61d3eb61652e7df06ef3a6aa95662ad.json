{"ast":null,"code":"var _jsxFileName = \"/Users/project2020/Documents/GitHub/FYP_React/src/components/Category/CarsProperty.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport CategoryTable from './CategoryTable.js';\nimport Spinner from 'react-bootstrap/Spinner';\n\nclass CarsProperty extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      error: null,\n      data: [],\n      carsPropertyHeader: [],\n      carsPropertyItem: [],\n      category: \"Cars & Property\",\n      fetch: \"http://desmond.business:8080/fyp/getCategoryFirstLvs\"\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true,\n      error: false\n    });\n    axios.get(this.state.fetch).then(res => {\n      // Transform the raw data by extracting the nested posts\n      const posts = res.data.results; //console.log(posts);\n      // Update state to trigger a re-render.\n      // Clear any errors, and turn off the loading indiciator.\n\n      const list = [];\n      posts.forEach(elm => {\n        if (elm.category_first_lv_name == this.state.category) {\n          console.log(\"theCategorySecondLvs\");\n          console.log(elm.theCategorySecondLvs);\n          list = elm.theCategorySecondLvs;\n          console.log(\"LIST\");\n          console.log(list);\n          this.setState({\n            data: list,\n            loading: false,\n            error: null\n          });\n        }\n      });\n    }).catch(err => {\n      // Something went wrong. Save the error in state and re-render.\n      this.setState({\n        loading: true,\n        error: err\n      });\n    });\n    console.log(this.state.data);\n  }\n\n  render() {\n    const {\n      data,\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, loading ? /*#__PURE__*/React.createElement(Spinner, {\n      animation: \"border\",\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }) : /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    }, \"Landed Data\"));\n  }\n\n}\n\nexport default CarsProperty;","map":{"version":3,"sources":["/Users/project2020/Documents/GitHub/FYP_React/src/components/Category/CarsProperty.js"],"names":["React","axios","CategoryTable","Spinner","CarsProperty","Component","constructor","props","state","loading","error","data","carsPropertyHeader","carsPropertyItem","category","fetch","componentDidMount","setState","get","then","res","posts","results","list","forEach","elm","category_first_lv_name","console","log","theCategorySecondLvs","catch","err","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,OAAP,MAAoB,yBAApB;;AAEA,MAAMC,YAAN,SAA2BJ,KAAK,CAACK,SAAjC,CAA2C;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,IADA;AAETC,MAAAA,KAAK,EAAE,IAFE;AAGTC,MAAAA,IAAI,EAAE,EAHG;AAITC,MAAAA,kBAAkB,EAAE,EAJX;AAKTC,MAAAA,gBAAgB,EAAE,EALT;AAMTC,MAAAA,QAAQ,EAAE,iBAND;AAOTC,MAAAA,KAAK,EAAE;AAPE,KAAb;AASH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,QAAL,CAAc;AACVR,MAAAA,OAAO,EAAE,IADC;AAEVC,MAAAA,KAAK,EAAE;AAFG,KAAd;AAIAT,IAAAA,KAAK,CAACiB,GAAN,CAAU,KAAKV,KAAL,CAAWO,KAArB,EACKI,IADL,CACUC,GAAG,IAAI;AACT;AAEA,YAAMC,KAAK,GAAGD,GAAG,CAACT,IAAJ,CAASW,OAAvB,CAHS,CAIT;AACA;AACA;;AACA,YAAMC,IAAI,GAAG,EAAb;AACAF,MAAAA,KAAK,CAACG,OAAN,CAAeC,GAAD,IAAS;AACnB,YAAIA,GAAG,CAACC,sBAAJ,IAA8B,KAAKlB,KAAL,CAAWM,QAA7C,EAAuD;AAEnDa,UAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,oBAAhB;AACAN,UAAAA,IAAI,GAAGE,GAAG,CAACI,oBAAX;AACAF,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,eAAKN,QAAL,CAAc;AACVN,YAAAA,IAAI,EAAEY,IADI;AAEVd,YAAAA,OAAO,EAAE,KAFC;AAGVC,YAAAA,KAAK,EAAE;AAHG,WAAd;AAKH;AACJ,OAdD;AAeH,KAxBL,EAyBKoB,KAzBL,CAyBWC,GAAG,IAAI;AACV;AACA,WAAKd,QAAL,CAAc;AACVR,QAAAA,OAAO,EAAE,IADC;AAEVC,QAAAA,KAAK,EAAEqB;AAFG,OAAd;AAIH,KA/BL;AAgCIJ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpB,KAAL,CAAWG,IAAvB;AACP;;AAEDqB,EAAAA,MAAM,GAAG;AACL,UAAM;AAAErB,MAAAA,IAAF;AAAQF,MAAAA;AAAR,QAAoB,KAAKD,KAA/B;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEKC,OAAO,gBACJ,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,QAAnB;AAA4B,MAAA,OAAO,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADI,gBAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALZ,CADJ;AAUH;;AAlEsC;;AAqE3C,eAAeL,YAAf","sourcesContent":["import React from 'react'\nimport axios from 'axios';\nimport CategoryTable from './CategoryTable.js'\nimport Spinner from 'react-bootstrap/Spinner'\n\nclass CarsProperty extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: true,\n            error: null,\n            data: [],\n            carsPropertyHeader: [],\n            carsPropertyItem: [],\n            category: \"Cars & Property\",\n            fetch: \"http://desmond.business:8080/fyp/getCategoryFirstLvs\"\n        }\n    }\n\n    componentDidMount() {\n        this.setState({\n            loading: true,\n            error: false\n        })\n        axios.get(this.state.fetch)\n            .then(res => {\n                // Transform the raw data by extracting the nested posts\n\n                const posts = res.data.results;\n                //console.log(posts);\n                // Update state to trigger a re-render.\n                // Clear any errors, and turn off the loading indiciator.\n                const list = []\n                posts.forEach((elm) => {\n                    if (elm.category_first_lv_name == this.state.category) {\n    \n                        console.log(\"theCategorySecondLvs\")\n                        console.log(elm.theCategorySecondLvs)\n                        list = elm.theCategorySecondLvs\n                        console.log(\"LIST\")\n                        console.log(list)\n                        this.setState({\n                            data: list,\n                            loading: false,\n                            error: null\n                        });\n                    }\n                })\n            })\n            .catch(err => {\n                // Something went wrong. Save the error in state and re-render.\n                this.setState({\n                    loading: true,\n                    error: err\n                });\n            })\n            console.log(this.state.data)\n    }\n\n    render() {\n        const { data, loading } = this.state;\n        return (\n            <div>\n         \n                {loading ? (\n                    <Spinner animation=\"border\" variant=\"primary\" />\n                ) : (\n                        <h6>Landed Data</h6>\n                    )}\n            </div>\n        )\n    }\n}\n\nexport default CarsProperty;"]},"metadata":{},"sourceType":"module"}