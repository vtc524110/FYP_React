{"ast":null,"code":"var _jsxFileName = \"/Users/project2020/Documents/GitHub/FYP_React/src/components/Category/CarsProperty.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport CategoryTable from './CategoryTable.js';\n\nclass CarsProperty extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: null,\n      error: null,\n      data: null,\n      carsPropertyHeader: [],\n      carsPropertyItem: [],\n      category: \"Cars & Property\",\n      fetch: \"http://desmond.business:8080/fyp/getCategoryFirstLvs\"\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true,\n      error: false\n    });\n    axios.get(this.state.fetch).then(res => {\n      // Transform the raw data by extracting the nested posts\n      const posts = res.data.results;\n      const list = null; //console.log(posts);\n      // Update state to trigger a re-render.\n      // Clear any errors, and turn off the loading indiciator.\n\n      posts.forEach(elm => {\n        if (elm.category_first_lv_name == this.state.category) {\n          console.log(elm);\n          list = elm.theCategorySecondLvs;\n        }\n      });\n      this.setState({\n        data: list,\n        loading: false,\n        error: null\n      });\n    }).catch(err => {\n      // Something went wrong. Save the error in state and re-render.\n      this.setState({\n        loading: false,\n        error: err\n      });\n    });\n    console.log(this.state.data);\n  }\n\n  render() {\n    const {\n      data,\n      loading\n    } = this.state;\n    return {\n      loading\n    } ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }\n    }, \"Landing category...\") : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 53\n      }\n    }, \"Loaded category...\");\n  }\n\n}\n\nexport default CarsProperty;","map":{"version":3,"sources":["/Users/project2020/Documents/GitHub/FYP_React/src/components/Category/CarsProperty.js"],"names":["React","axios","CategoryTable","CarsProperty","Component","constructor","props","state","loading","error","data","carsPropertyHeader","carsPropertyItem","category","fetch","componentDidMount","setState","get","then","res","posts","results","list","forEach","elm","category_first_lv_name","console","log","theCategorySecondLvs","catch","err","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;;AAEA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,IADA;AAETC,MAAAA,KAAK,EAAE,IAFE;AAGTC,MAAAA,IAAI,EAAG,IAHE;AAITC,MAAAA,kBAAkB,EAAC,EAJV;AAKTC,MAAAA,gBAAgB,EAAE,EALT;AAMTC,MAAAA,QAAQ,EAAE,iBAND;AAOTC,MAAAA,KAAK,EAAG;AAPC,KAAb;AASH;;AAEAC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,QAAL,CAAc;AACVR,MAAAA,OAAO,EAAC,IADE;AAEVC,MAAAA,KAAK,EAAC;AAFI,KAAd;AAIDR,IAAAA,KAAK,CAACgB,GAAN,CAAU,KAAKV,KAAL,CAAWO,KAArB,EACCI,IADD,CACMC,GAAG,IAAI;AACT;AAEA,YAAMC,KAAK,GAAGD,GAAG,CAACT,IAAJ,CAASW,OAAvB;AACA,YAAMC,IAAI,GAAG,IAAb,CAJS,CAKT;AACA;AACA;;AACAF,MAAAA,KAAK,CAACG,OAAN,CAAeC,GAAD,IAAS;AACnB,YAAGA,GAAG,CAACC,sBAAJ,IAA8B,KAAKlB,KAAL,CAAWM,QAA5C,EAAqD;AACjDa,UAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAF,UAAAA,IAAI,GAAGE,GAAG,CAACI,oBAAX;AACH;AACJ,OALD;AAMA,WAAKZ,QAAL,CAAc;AACVN,QAAAA,IAAI,EAAEY,IADI;AAEVd,QAAAA,OAAO,EAAE,KAFC;AAGVC,QAAAA,KAAK,EAAE;AAHG,OAAd;AAKH,KApBD,EAqBCoB,KArBD,CAqBOC,GAAG,IAAI;AACV;AACA,WAAKd,QAAL,CAAc;AACVR,QAAAA,OAAO,EAAE,KADC;AAEVC,QAAAA,KAAK,EAAEqB;AAFG,OAAd;AAIH,KA3BD;AA4BAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpB,KAAL,CAAWG,IAAvB;AACH;;AAEDqB,EAAAA,MAAM,GAAG;AACL,UAAM;AAAErB,MAAAA,IAAF;AAAQF,MAAAA;AAAR,QAAoB,KAAKD,KAA/B;AACA,WAEI;AAACC,MAAAA;AAAD,qBAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAZ,gBAAwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAF5C;AAIH;;AAxDsC;;AA2D3C,eAAeL,YAAf","sourcesContent":["import React from 'react'\nimport axios from 'axios';\nimport CategoryTable from './CategoryTable.js'\n\nclass CarsProperty extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: null,\n            error: null,\n            data : null,\n            carsPropertyHeader:[],\n            carsPropertyItem: [],\n            category: \"Cars & Property\",\n            fetch : \"http://desmond.business:8080/fyp/getCategoryFirstLvs\"\n        }\n    }\n\n     componentDidMount(){\n         this.setState({\n             loading:true,\n             error:false\n         })\n        axios.get(this.state.fetch)\n        .then(res => {\n            // Transform the raw data by extracting the nested posts\n\n            const posts = res.data.results;\n            const list = null;\n            //console.log(posts);\n            // Update state to trigger a re-render.\n            // Clear any errors, and turn off the loading indiciator.\n            posts.forEach((elm) => {\n                if(elm.category_first_lv_name == this.state.category){\n                    console.log(elm)\n                    list = elm.theCategorySecondLvs\n                }\n            })\n            this.setState({\n                data: list,\n                loading: false,\n                error: null\n            });\n        })\n        .catch(err => {\n            // Something went wrong. Save the error in state and re-render.\n            this.setState({\n                loading: false,\n                error: err\n            });\n        })\n        console.log(this.state.data)\n    }\n\n    render() {\n        const { data, loading } = this.state;\n        return (\n            \n            {loading} ? <p>Landing category...</p>: <p>Loaded category...</p>\n        )\n    }\n}\n\nexport default CarsProperty;"]},"metadata":{},"sourceType":"module"}