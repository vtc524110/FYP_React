{"ast":null,"code":"var _jsxFileName = \"/Users/project2020/Documents/GitHub/FYP_React/src/components/Category/CarsProperty.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport CategoryTable from './CategoryTable.js';\nimport Spinner from 'react-bootstrap/Spinner';\n\nclass CarsProperty extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchData = async () => {\n      const list = null;\n      this.setState({\n        data: null,\n        loading: true,\n        error: null\n      });\n      await axios.get(this.state.fetch).then(res => {\n        // Transform the raw data by extracting the nested posts\n        const posts = res.data.results; //console.log(posts);\n        // Update state to trigger a re-render.\n        // Clear any errors, and turn off the loading indiciator.\n\n        posts.forEach(elm => {\n          if (elm.category_first_lv_name == this.state.category) {\n            console.log(\"theCategorySecondLvs\");\n            console.log(elm.theCategorySecondLvs);\n            this.state.data.push(elm.theCategorySecondLvs);\n          }\n        });\n        this.setState({\n          loading: false\n        });\n      }).catch(err => {\n        // Something went wrong. Save the error in state and re-render.\n        this.setState({\n          loading: true,\n          error: err\n        });\n      });\n      console.log(this.state.data);\n    };\n\n    this.isLoading = () => {\n      return this.state.loading;\n    };\n\n    this.state = {\n      loading: true,\n      error: null,\n      data: [],\n      category: \"Cars & Property\",\n      fetch: \"http://desmond.business:8080/fyp/getCategoryFirstLvs\"\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  render() {\n    const {\n      data,\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, this.isLoading() ? /*#__PURE__*/React.createElement(Spinner, {\n      animation: \"border\",\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }) : /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }, \"Landed Data\"));\n  }\n\n}\n\nexport default CarsProperty;","map":{"version":3,"sources":["/Users/project2020/Documents/GitHub/FYP_React/src/components/Category/CarsProperty.js"],"names":["React","axios","CategoryTable","Spinner","CarsProperty","Component","constructor","props","fetchData","list","setState","data","loading","error","get","state","fetch","then","res","posts","results","forEach","elm","category_first_lv_name","category","console","log","theCategorySecondLvs","push","catch","err","isLoading","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,OAAP,MAAoB,yBAApB;;AAEA,MAAMC,YAAN,SAA2BJ,KAAK,CAACK,SAAjC,CAA2C;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAWnBC,SAXmB,GAWP,YAAY;AACpB,YAAMC,IAAI,GAAG,IAAb;AACA,WAAKC,QAAL,CAAc;AACVC,QAAAA,IAAI,EAAE,IADI;AAEVC,QAAAA,OAAO,EAAE,IAFC;AAGVC,QAAAA,KAAK,EAAE;AAHG,OAAd;AAKA,YAAMZ,KAAK,CAACa,GAAN,CAAU,KAAKC,KAAL,CAAWC,KAArB,EACDC,IADC,CACIC,GAAG,IAAI;AACT;AAEA,cAAMC,KAAK,GAAGD,GAAG,CAACP,IAAJ,CAASS,OAAvB,CAHS,CAIT;AACA;AACA;;AACAD,QAAAA,KAAK,CAACE,OAAN,CAAeC,GAAD,IAAS;AACnB,cAAIA,GAAG,CAACC,sBAAJ,IAA8B,KAAKR,KAAL,CAAWS,QAA7C,EAAuD;AACnDC,YAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAD,YAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,oBAAhB;AACA,iBAAKZ,KAAL,CAAWJ,IAAX,CAAgBiB,IAAhB,CAAqBN,GAAG,CAACK,oBAAzB;AACH;AACJ,SAND;AAOA,aAAKjB,QAAL,CAAc;AACVE,UAAAA,OAAO,EAAE;AADC,SAAd;AAGH,OAlBC,EAmBDiB,KAnBC,CAmBKC,GAAG,IAAI;AACV;AACA,aAAKpB,QAAL,CAAc;AACVE,UAAAA,OAAO,EAAE,IADC;AAEVC,UAAAA,KAAK,EAAEiB;AAFG,SAAd;AAIH,OAzBC,CAAN;AA0BIL,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWJ,IAAvB;AACP,KA7CkB;;AAAA,SAmDnBoB,SAnDmB,GAmDP,MAAK;AACb,aAAO,KAAKhB,KAAL,CAAWH,OAAlB;AACH,KArDkB;;AAEf,SAAKG,KAAL,GAAa;AACTH,MAAAA,OAAO,EAAE,IADA;AAETC,MAAAA,KAAK,EAAE,IAFE;AAGTF,MAAAA,IAAI,EAAE,EAHG;AAITa,MAAAA,QAAQ,EAAE,iBAJD;AAKTR,MAAAA,KAAK,EAAE;AALE,KAAb;AAOH;;AAsCDgB,EAAAA,iBAAiB,GAAG;AAChB,SAAKxB,SAAL;AACH;;AAKDyB,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEtB,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAoB,KAAKG,KAA/B;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEK,KAAKgB,SAAL,kBACG,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,QAAnB;AAA4B,MAAA,OAAO,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,gBAGO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALZ,CADJ;AAUH;;AAnEsC;;AAsE3C,eAAe3B,YAAf","sourcesContent":["import React from 'react'\nimport axios from 'axios';\nimport CategoryTable from './CategoryTable.js'\nimport Spinner from 'react-bootstrap/Spinner'\n\nclass CarsProperty extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: true,\n            error: null,\n            data: [],\n            category: \"Cars & Property\",\n            fetch: \"http://desmond.business:8080/fyp/getCategoryFirstLvs\"\n        }\n    }\n\n    fetchData = async () => {\n        const list = null\n        this.setState({\n            data: null,\n            loading: true,\n            error: null\n        })\n        await axios.get(this.state.fetch)\n            .then(res => {\n                // Transform the raw data by extracting the nested posts\n\n                const posts = res.data.results;\n                //console.log(posts);\n                // Update state to trigger a re-render.\n                // Clear any errors, and turn off the loading indiciator.\n                posts.forEach((elm) => {\n                    if (elm.category_first_lv_name == this.state.category) {   \n                        console.log(\"theCategorySecondLvs\")\n                        console.log(elm.theCategorySecondLvs)\n                        this.state.data.push(elm.theCategorySecondLvs)\n                    }\n                })\n                this.setState({\n                    loading: false\n                })\n            })\n            .catch(err => {\n                // Something went wrong. Save the error in state and re-render.\n                this.setState({\n                    loading: true,\n                    error: err\n                });\n            })\n            console.log(this.state.data)\n    }\n\n    componentDidMount() {\n        this.fetchData()\n    }\n\n    isLoading = () =>{\n        return this.state.loading\n    }\n    render() {\n        const { data, loading } = this.state;\n        return (\n            <div>\n         \n                {this.isLoading() ? (\n                    <Spinner animation=\"border\" variant=\"primary\" />\n                ) : (\n                        <h6>Landed Data</h6>\n                    )}\n            </div>\n        )\n    }\n}\n\nexport default CarsProperty;"]},"metadata":{},"sourceType":"module"}